{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog stuff\\\\OGame\\\\frontend\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext, useEffect, useContext, useRef } from 'react';\nimport { Window, MessageList, MessageInput } from 'stream-chat-react';\nimport './Chat.css';\nimport MainGame from './Maingame';\nimport './Components.css';\nimport Board from './Board';\nimport Keyboard from './Keyboard';\nimport { boardDefault, generateWordSet } from './Words';\nimport WordInput from './WordInput';\nimport { Inputcontext } from './WordInput';\nimport wordleInput from './WordInput';\nimport GameOver from './GameOver';\nimport { useChatContext, useChannelStateContext } from 'stream-chat-react';\nimport response from './JoinGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Gamecontext = /*#__PURE__*/createContext();\nfunction Game() {\n  _s();\n  //popup\n  // const [showWordInput, setShowWordInput] = useState(true)\n  // input for wordle\n\n  //wordle\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letterPos: 0\n  });\n  const [wordSet, setWordSet] = useState(new Set());\n  const [disabledLetters, setDisabledLetters] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false\n  });\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [wordleWord, setWordleWord] = useState(\"\");\n  const {\n    client\n  } = useChatContext();\n  const {\n    channel\n  } = useChannelStateContext();\n  useEffect(() => {\n    generateWordSet().then(words => {\n      setWordSet(words.wordSet);\n      setCorrectWord(words.todaysWords);\n    });\n  }, []);\n  //    ^setWordSet\n\n  const onSelectLetter = keyVal => {\n    if (currAttempt.letterPos > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({\n      ...currAttempt,\n      letterPos: currAttempt.letterPos + 1\n    });\n  };\n  const onDelete = () => {\n    if (currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({\n      ...currAttempt,\n      letterPos: currAttempt.letterPos - 1\n    });\n  };\n  const onEnter = () => {\n    if (currAttempt.letterPos !== 5) return;\n    let currWord = \"\";\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n      currWord.toLowerCase();\n    }\n    if (wordSet.has(currWord.toLowerCase())) {\n      setCurrAttempt({\n        attempt: currAttempt.attempt + 1,\n        letterPos: 0\n      });\n    } else {\n      alert(\"Word not found\");\n    }\n    if (currWord.trim().toLowerCase() === correctWord.trim().toLowerCase()) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: true\n      });\n    }\n    if (currAttempt.attempt === 5 && wordSet.has(currWord.toLowerCase())) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: false\n      });\n    }\n  };\n\n  // PLAYER LOGIC \n\n  const [playersJoined, setPlayersJoined] = useState(channel.state.watcher_count === 2);\n  if (playersJoined === 2) {}\n  channel.on(\"user.watching.start\", event => {\n    setPlayersJoined(event.watcher_count === 2);\n  });\n\n  // winner\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  });\n  if (!playersJoined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Waiting for other player to join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Gamecontext.Provider, {\n      value: {\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        onSelectLetter,\n        onDelete,\n        onEnter,\n        correctWord,\n        setDisabledLetters,\n        disabledLetters,\n        gameOver,\n        setGameOver\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), gameOver.gameOver ? /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Window, {\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        disableDateSeparator: true,\n        closeReactionSelectorOnClick: true,\n        messageActions: [\"react\"],\n        hideDeletedMessages: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        noFiles: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"U1b9EiW6nNAgU6jGpv4jjrlmr8w=\", false, function () {\n  return [useChatContext, useChannelStateContext];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","createContext","useEffect","useContext","useRef","Window","MessageList","MessageInput","MainGame","Board","Keyboard","boardDefault","generateWordSet","WordInput","Inputcontext","wordleInput","GameOver","useChatContext","useChannelStateContext","response","Gamecontext","Game","board","setBoard","currAttempt","setCurrAttempt","attempt","letterPos","wordSet","setWordSet","Set","disabledLetters","setDisabledLetters","gameOver","setGameOver","guessedWord","correctWord","setCorrectWord","wordleWord","setWordleWord","client","channel","then","words","todaysWords","onSelectLetter","keyVal","newBoard","onDelete","onEnter","currWord","i","toLowerCase","has","alert","trim","playersJoined","setPlayersJoined","state","watcher_count","on","event","result","setResult","winner"],"sources":["E:/Prog stuff/OGame/frontend/src/components/Game.js"],"sourcesContent":["import React, { useState, createContext, useEffect, useContext, useRef } from 'react'\r\nimport { Window, MessageList, MessageInput } from 'stream-chat-react'\r\nimport './Chat.css';\r\nimport MainGame from './Maingame';\r\nimport './Components.css';\r\nimport Board from './Board';\r\nimport Keyboard from './Keyboard';\r\nimport { boardDefault, generateWordSet } from './Words';\r\nimport WordInput from './WordInput';\r\nimport { Inputcontext } from './WordInput';\r\nimport wordleInput from './WordInput';\r\nimport GameOver from './GameOver';\r\nimport {useChatContext, useChannelStateContext} from 'stream-chat-react'\r\nimport response from './JoinGame';\r\n\r\nexport const Gamecontext = createContext();\r\n\r\nfunction Game() {\r\n\r\n\r\n\r\n  //popup\r\n // const [showWordInput, setShowWordInput] = useState(true)\r\n  // input for wordle\r\n\r\n  //wordle\r\n  const [board, setBoard] = useState(boardDefault);\r\n  const [currAttempt, setCurrAttempt] = useState({attempt: 0, letterPos: 0});\r\n  const [wordSet, setWordSet] = useState(new Set())\r\n  const [disabledLetters, setDisabledLetters] = useState([]);\r\n  const [gameOver, setGameOver] = useState({gameOver: false, guessedWord: false,});\r\n  const [correctWord, setCorrectWord] = useState(\"\");\r\n  const [wordleWord, setWordleWord] = useState(\"\");\r\n  const { client } = useChatContext();\r\n  const { channel } = useChannelStateContext();\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    generateWordSet().then((words) => {\r\n      setWordSet(words.wordSet);\r\n      setCorrectWord(words.todaysWords);\r\n    });\r\n  }, [ ]);\r\n  //    ^setWordSet\r\n\r\n\r\n  const onSelectLetter = (keyVal) =>{\r\n    if (currAttempt.letterPos > 4) return;\r\n\r\n    const newBoard = [...board];\r\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\r\n    setBoard(newBoard);\r\n    setCurrAttempt({...currAttempt, letterPos: currAttempt.letterPos + 1});\r\n  }\r\n\r\n  const onDelete = () => {\r\n    if (currAttempt.letterPos === 0 ) return; \r\n    const newBoard = [...board];\r\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\r\n    setBoard(newBoard)\r\n    setCurrAttempt({ ...currAttempt, letterPos: currAttempt.letterPos -1 });\r\n  }\r\n\r\n  const onEnter = () => {\r\n    if (currAttempt.letterPos !== 5) return;\r\n    let currWord = \"\";\r\n    for (let i = 0; i < 5; i++) {\r\n      currWord += board[currAttempt.attempt][i];\r\n      currWord.toLowerCase()\r\n    }\r\n    if (wordSet.has(currWord.toLowerCase())) {\r\n      setCurrAttempt({ attempt: currAttempt.attempt + 1, letterPos: 0});\r\n    } else {\r\n      alert (\"Word not found\")\r\n    }\r\n\r\n    if (currWord.trim().toLowerCase() === correctWord.trim().toLowerCase()) {\r\n      setGameOver({gameOver: true, guessedWord: true})\r\n    }\r\n    if (currAttempt.attempt === 5 && wordSet.has(currWord.toLowerCase())){\r\n      setGameOver({gameOver: true, guessedWord: false});\r\n    }\r\n\r\n  }\r\n\r\n// PLAYER LOGIC \r\n\r\nconst [playersJoined, setPlayersJoined] = useState(channel.state.watcher_count === 2);\r\n\r\nif (playersJoined === 2){\r\n\r\n\r\n}\r\n\r\n\r\nchannel.on(\"user.watching.start\", (event) => {\r\n  setPlayersJoined(event.watcher_count === 2);\r\n});\r\n\r\n// winner\r\nconst [result, setResult] = useState({winner: \"none\", state:\"none\"})\r\nif (!playersJoined){\r\n        return <div>Waiting for other player to join</div>\r\n    }\r\n  return (\r\n    <div className='gameContainer'>\r\n      {/* <MainGame result ={result} setResult={setResult}/> */}\r\n      <Gamecontext.Provider value={{ board, setBoard, currAttempt, setCurrAttempt, onSelectLetter, onDelete, onEnter, correctWord, setDisabledLetters, disabledLetters, gameOver, setGameOver, }}>\r\n        <div className='game'>\r\n          {/*<button onClick={() =>\r\n          setShowWordInput(true)}>Show</button> */}\r\n         {/* <WordInput  visible={showWordInput} onClose={() => setShowWordInput(false)}  />  */}\r\n          <Board/>\r\n          { gameOver.gameOver ? <GameOver /> : <Keyboard/>}\r\n        </div>\r\n      </Gamecontext.Provider>\r\n      <Window>\r\n        <MessageList disableDateSeparator closeReactionSelectorOnClick messageActions={[\"react\"]} hideDeletedMessages/>\r\n        <MessageInput noFiles/>\r\n      </Window>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}