{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { StreamChat } from \"stream-chat\";\nfunction useCheckWord() {\n  _s();\n  const [checkWin, setCheckWin] = useState(false);\n  useEffect(() => {\n    const client = new StreamChat(\"cy5uuk3773vq\");\n    client.setUser({\n      id: \"<USER_ID>\",\n      name: \"<USER_NAME>\"\n    }, \"<USER_TOKEN>\");\n    const channel = client.channel(\"<CHANNEL_TYPE>\", \"<CHANNEL_ID>\");\n    const handleEvent = event => {\n      if (event.type === \"message.new\" && event.message.text.includes(\"guessed the word\")) {\n        setCheckWin(true);\n      }\n    };\n    channel.on(\"message.new\", handleEvent);\n    channel.on(\"message.updated\", handleEvent);\n    return () => {\n      channel.off(\"message.new\", handleEvent);\n      channel.off(\"message.updated\", handleEvent);\n    };\n  }, []);\n  return checkWin;\n}\n_s(useCheckWord, \"W9P3HXQPlS9vnZAnvQGrdOgfr4k=\");\nexport default useCheckWord;","map":{"version":3,"names":["useState","useEffect","StreamChat","useCheckWord","checkWin","setCheckWin","client","setUser","id","name","channel","handleEvent","event","type","message","text","includes","on","off"],"sources":["E:/Prog stuff/OGame/frontend/src/components/useCheckWord.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { StreamChat } from \"stream-chat\";\r\n\r\nfunction useCheckWord() {\r\n  const [checkWin, setCheckWin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const client = new StreamChat(\"cy5uuk3773vq\");\r\n\r\n    client.setUser(\r\n      {\r\n        id: \"<USER_ID>\",\r\n        name: \"<USER_NAME>\",\r\n      },\r\n      \"<USER_TOKEN>\"\r\n    );\r\n\r\n    const channel = client.channel(\"<CHANNEL_TYPE>\", \"<CHANNEL_ID>\");\r\n\r\n    const handleEvent = (event) => {\r\n      if (\r\n        event.type === \"message.new\" &&\r\n        event.message.text.includes(\"guessed the word\")\r\n      ) {\r\n        setCheckWin(true);\r\n      }\r\n    };\r\n\r\n    channel.on(\"message.new\", handleEvent);\r\n    channel.on(\"message.updated\", handleEvent);\r\n\r\n    return () => {\r\n      channel.off(\"message.new\", handleEvent);\r\n      channel.off(\"message.updated\", handleEvent);\r\n    };\r\n  }, []);\r\n\r\n  return checkWin;\r\n}\r\n\r\nexport default useCheckWord;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,aAAa;AAExC,SAASC,YAAY,GAAG;EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMK,MAAM,GAAG,IAAIJ,UAAU,CAAC,cAAc,CAAC;IAE7CI,MAAM,CAACC,OAAO,CACZ;MACEC,EAAE,EAAE,WAAW;MACfC,IAAI,EAAE;IACR,CAAC,EACD,cAAc,CACf;IAED,MAAMC,OAAO,GAAGJ,MAAM,CAACI,OAAO,CAAC,gBAAgB,EAAE,cAAc,CAAC;IAEhE,MAAMC,WAAW,GAAIC,KAAK,IAAK;MAC7B,IACEA,KAAK,CAACC,IAAI,KAAK,aAAa,IAC5BD,KAAK,CAACE,OAAO,CAACC,IAAI,CAACC,QAAQ,CAAC,kBAAkB,CAAC,EAC/C;QACAX,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC;IAEDK,OAAO,CAACO,EAAE,CAAC,aAAa,EAAEN,WAAW,CAAC;IACtCD,OAAO,CAACO,EAAE,CAAC,iBAAiB,EAAEN,WAAW,CAAC;IAE1C,OAAO,MAAM;MACXD,OAAO,CAACQ,GAAG,CAAC,aAAa,EAAEP,WAAW,CAAC;MACvCD,OAAO,CAACQ,GAAG,CAAC,iBAAiB,EAAEP,WAAW,CAAC;IAC7C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOP,QAAQ;AACjB;AAAC,GAnCQD,YAAY;AAqCrB,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}