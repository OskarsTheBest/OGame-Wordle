{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog stuff\\\\OGame\\\\frontend\\\\src\\\\components\\\\JoinGame.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useChatContext, Channel } from 'stream-chat-react';\nimport CustomInput from './CustomInput';\nimport Game from './Game';\nimport { generateWordSet } from './Words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JoinGame() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [rivalUsername, setRivalUsername] = useState(\"\");\n  const {\n    client\n  } = useChatContext();\n  const [channel, setchannel] = useState(null);\n  const [selectedWord, setSelectedWord] = useState(\"\");\n  const [wordSet, setWordSet] = useState(new Set());\n  const createChannel = async () => {\n    _s();\n    const response = await client.queryUsers({\n      name: {\n        $eq: rivalUsername\n      }\n    });\n    useEffect(() => {\n      generateWordSet().then(words => {\n        setWordSet(words.wordSet);\n        setSelectedWord(words.todaysWords);\n      });\n    }, []);\n    if (response.users.length === 0) {\n      alert(\"User not found\");\n      return;\n    }\n    const newChannel = await client.channel(\"messaging\", {\n      members: [client.userID, response.users[0].id]\n    });\n    await newChannel.watch();\n    setchannel(newChannel);\n  };\n  _s(createChannel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: channel ? /*#__PURE__*/_jsxDEV(Channel, {\n      channel: channel,\n      Input: CustomInput,\n      children: channel && /*#__PURE__*/_jsxDEV(Game, {\n        channel: channel,\n        selectedWord: selectedWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Create Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username of rival\",\n        onChange: event => {\n          setRivalUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createChannel,\n        children: \" Join game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s2(JoinGame, \"XD0B6KDtu4rmthXG8cHCu6e2n+0=\", false, function () {\n  return [useChatContext];\n});\n_c = JoinGame;\nexport default JoinGame;\nvar _c;\n$RefreshReg$(_c, \"JoinGame\");","map":{"version":3,"names":["React","useState","useChatContext","Channel","CustomInput","Game","generateWordSet","JoinGame","rivalUsername","setRivalUsername","client","channel","setchannel","selectedWord","setSelectedWord","wordSet","setWordSet","Set","createChannel","response","queryUsers","name","$eq","useEffect","then","words","todaysWords","users","length","alert","newChannel","members","userID","id","watch","event","target","value"],"sources":["E:/Prog stuff/OGame/frontend/src/components/JoinGame.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {useChatContext, Channel} from 'stream-chat-react'\r\nimport CustomInput from './CustomInput';\r\nimport Game from './Game';\r\nimport { generateWordSet } from './Words';\r\n\r\n\r\n\r\nfunction JoinGame() {\r\n  const [rivalUsername, setRivalUsername] = useState(\"\");\r\n  const { client } = useChatContext();\r\n  const [channel, setchannel] = useState(null)\r\n  const [selectedWord, setSelectedWord] = useState(\"\");\r\n  const [wordSet, setWordSet] = useState(new Set())\r\n  const createChannel = async () => {\r\n  const response = await client.queryUsers({ name: { $eq: rivalUsername}});\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    generateWordSet().then((words) => {\r\n      setWordSet(words.wordSet);\r\n      setSelectedWord(words.todaysWords);\r\n    });\r\n  }, [ ]);\r\n\r\n\r\n\r\n\r\n\r\n    if (response.users.length === 0) {\r\n      alert(\"User not found\")\r\n      return\r\n    }\r\n\r\n    const newChannel = await client.channel(\"messaging\", {\r\n      members: [client.userID, response.users[0].id],\r\n    });\r\n\r\n    await newChannel.watch();\r\n    setchannel(newChannel);\r\n  };\r\n  return (\r\n    <>\r\n    {channel ? (\r\n      <Channel channel={channel} Input={CustomInput}>\r\n      {channel && <Game channel={channel} selectedWord={selectedWord}/>}\r\n      </Channel>\r\n    )  : (\r\n    \r\n    \r\n    <div>\r\n    <h4>Create Game</h4>\r\n    <input placeholder=\"Username of rival\" onChange={(event) => {\r\n        setRivalUsername(event.target.value);\r\n    }}\r\n     />\r\n     <button onClick={createChannel}> Join game</button>\r\n    </div>\r\n  )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default JoinGame\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,cAAc,EAAEC,OAAO,QAAO,mBAAmB;AACzD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,eAAe,QAAQ,SAAS;AAAC;AAAA;AAI1C,SAASC,QAAQ,GAAG;EAAA;EAAA;EAClB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAES;EAAO,CAAC,GAAGR,cAAc,EAAE;EACnC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAIgB,GAAG,EAAE,CAAC;EACjD,MAAMC,aAAa,GAAG,YAAY;IAAA;IAClC,MAAMC,QAAQ,GAAG,MAAMT,MAAM,CAACU,UAAU,CAAC;MAAEC,IAAI,EAAE;QAAEC,GAAG,EAAEd;MAAa;IAAC,CAAC,CAAC;IAKxEe,SAAS,CAAC,MAAM;MACdjB,eAAe,EAAE,CAACkB,IAAI,CAAEC,KAAK,IAAK;QAChCT,UAAU,CAACS,KAAK,CAACV,OAAO,CAAC;QACzBD,eAAe,CAACW,KAAK,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,EAAE,EAAG,CAAC;IAML,IAAIP,QAAQ,CAACQ,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MAC/BC,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACF;IAEA,MAAMC,UAAU,GAAG,MAAMpB,MAAM,CAACC,OAAO,CAAC,WAAW,EAAE;MACnDoB,OAAO,EAAE,CAACrB,MAAM,CAACsB,MAAM,EAAEb,QAAQ,CAACQ,KAAK,CAAC,CAAC,CAAC,CAACM,EAAE;IAC/C,CAAC,CAAC;IAEF,MAAMH,UAAU,CAACI,KAAK,EAAE;IACxBtB,UAAU,CAACkB,UAAU,CAAC;EACxB,CAAC;EAAC,GA5BIZ,aAAa;EA6BnB,oBACE;IAAA,UACCP,OAAO,gBACN,QAAC,OAAO;MAAC,OAAO,EAAEA,OAAQ;MAAC,KAAK,EAAEP,WAAY;MAAA,UAC7CO,OAAO,iBAAI,QAAC,IAAI;QAAC,OAAO,EAAEA,OAAQ;QAAC,YAAY,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACvD,gBAIZ;MAAA,wBACA;QAAA,UAAI;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK,eACpB;QAAO,WAAW,EAAC,mBAAmB;QAAC,QAAQ,EAAGsB,KAAK,IAAK;UACxD1B,gBAAgB,CAAC0B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QACxC;MAAE;QAAA;QAAA;QAAA;MAAA,QACC,eACF;QAAQ,OAAO,EAAEnB,aAAc;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAErD,iBACE;AAEL;AAAC,IAvDQX,QAAQ;EAAA,QAEIL,cAAc;AAAA;AAAA,KAF1BK,QAAQ;AAyDjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}