{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction useCheckWord() {\n  _s();\n  const [checkWin, setCheckWin] = useState(false);\n  const [observer, setObserver] = useState(null);\n  useEffect(() => {\n    const targetSelector = \".str-chat__ul\";\n    let targetNode = document.querySelector(targetSelector);\n    const handleDOMNodeInserted = event => {\n      if (event.target.matches(targetSelector)) {\n        targetNode = event.target;\n        observer.observe(targetNode, {\n          childList: true\n        });\n      }\n    };\n    if (targetNode) {\n      const observer = new MutationObserver((mutationsList, observer) => {\n        // Handle mutations\n      });\n      observer.observe(targetNode, {\n        childList: true\n      });\n      document.addEventListener(\"DOMNodeInserted\", handleDOMNodeInserted);\n      return () => {\n        observer.disconnect();\n        document.removeEventListener(\"DOMNodeInserted\", handleDOMNodeInserted);\n      };\n    }\n  }, []);\n  return checkWin;\n}\n_s(useCheckWord, \"b/a1mV8Lv0szJc8LsVg3PnNa0Yk=\");\nexport default useCheckWord;","map":{"version":3,"names":["useState","useEffect","useCheckWord","checkWin","setCheckWin","observer","setObserver","targetSelector","targetNode","document","querySelector","handleDOMNodeInserted","event","target","matches","observe","childList","MutationObserver","mutationsList","addEventListener","disconnect","removeEventListener"],"sources":["E:/Prog stuff/OGame/frontend/src/components/useCheckWord.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction useCheckWord() {\r\n  const [checkWin, setCheckWin] = useState(false);\r\n  const [observer, setObserver] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const targetSelector = \".str-chat__ul\";\r\n    let targetNode = document.querySelector(targetSelector);\r\n  \r\n    const handleDOMNodeInserted = (event) => {\r\n      if (event.target.matches(targetSelector)) {\r\n        targetNode = event.target;\r\n        observer.observe(targetNode, { childList: true });\r\n      }\r\n    };\r\n  \r\n    if (targetNode) {\r\n      const observer = new MutationObserver((mutationsList, observer) => {\r\n        // Handle mutations\r\n      });\r\n  \r\n      observer.observe(targetNode, { childList: true });\r\n  \r\n      document.addEventListener(\"DOMNodeInserted\", handleDOMNodeInserted);\r\n  \r\n      return () => {\r\n        observer.disconnect();\r\n        document.removeEventListener(\"DOMNodeInserted\", handleDOMNodeInserted);\r\n      };\r\n    }\r\n  }, []);\r\n  \r\n\r\n  return checkWin;\r\n}\r\n\r\nexport default useCheckWord;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,YAAY,GAAG;EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMM,cAAc,GAAG,eAAe;IACtC,IAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAACH,cAAc,CAAC;IAEvD,MAAMI,qBAAqB,GAAIC,KAAK,IAAK;MACvC,IAAIA,KAAK,CAACC,MAAM,CAACC,OAAO,CAACP,cAAc,CAAC,EAAE;QACxCC,UAAU,GAAGI,KAAK,CAACC,MAAM;QACzBR,QAAQ,CAACU,OAAO,CAACP,UAAU,EAAE;UAAEQ,SAAS,EAAE;QAAK,CAAC,CAAC;MACnD;IACF,CAAC;IAED,IAAIR,UAAU,EAAE;MACd,MAAMH,QAAQ,GAAG,IAAIY,gBAAgB,CAAC,CAACC,aAAa,EAAEb,QAAQ,KAAK;QACjE;MAAA,CACD,CAAC;MAEFA,QAAQ,CAACU,OAAO,CAACP,UAAU,EAAE;QAAEQ,SAAS,EAAE;MAAK,CAAC,CAAC;MAEjDP,QAAQ,CAACU,gBAAgB,CAAC,iBAAiB,EAAER,qBAAqB,CAAC;MAEnE,OAAO,MAAM;QACXN,QAAQ,CAACe,UAAU,EAAE;QACrBX,QAAQ,CAACY,mBAAmB,CAAC,iBAAiB,EAAEV,qBAAqB,CAAC;MACxE,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,OAAOR,QAAQ;AACjB;AAAC,GAjCQD,YAAY;AAmCrB,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}