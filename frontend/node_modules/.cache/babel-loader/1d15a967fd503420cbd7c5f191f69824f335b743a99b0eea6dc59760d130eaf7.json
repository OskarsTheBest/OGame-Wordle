{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog stuff\\\\OGame\\\\frontend\\\\src\\\\components\\\\Letter.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Gamecontext } from './Game';\nimport './Components.css';\nimport JoinContext from './JoinGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Letter(_ref) {\n  _s();\n  let {\n    letterPos,\n    attemptVal\n  } = _ref;\n  const {\n    selectedWord\n  } = useContext(JoinContext);\n  const {\n    board,\n    correctWord,\n    currAttempt,\n    disabledLetters,\n    setDisabledLetters\n  } = useContext(Gamecontext);\n  const letter = board[attemptVal][letterPos];\n  const correct = correctWord.toUpperCase()[letterPos] === letter;\n  const almost = !correct && letter != \"\" && correctWord.toUpperCase().includes(letter);\n  const letterState = currAttempt.attempt > attemptVal && (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n  useEffect(() => {\n    if (letter !== \"\" && !correct && !almost) {\n      setDisabledLetters(prev => [...prev, letter]);\n    }\n  }, [currAttempt.attempt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter\",\n    id: letterState,\n    children: [\" \", letter, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Letter, \"zk2C8wJK2VP6p5q+29GFX7kXLoA=\");\n_c = Letter;\nexport default Letter;\nvar _c;\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useContext","useEffect","Gamecontext","JoinContext","Letter","letterPos","attemptVal","selectedWord","board","correctWord","currAttempt","disabledLetters","setDisabledLetters","letter","correct","toUpperCase","almost","includes","letterState","attempt","prev"],"sources":["E:/Prog stuff/OGame/frontend/src/components/Letter.js"],"sourcesContent":["import React, {useContext, useEffect} from 'react'\r\nimport { Gamecontext } from './Game';\r\nimport './Components.css';\r\nimport JoinContext from './JoinGame';\r\n\r\nfunction Letter({letterPos, attemptVal}) {\r\n    const {selectedWord} = useContext(JoinContext);\r\n    const { board, correctWord, currAttempt, disabledLetters, setDisabledLetters } = useContext(Gamecontext);\r\n    const letter = board[attemptVal][letterPos];\r\n    const correct = correctWord.toUpperCase()[letterPos] === letter;\r\n    const almost = !correct && letter != \"\" && correctWord.toUpperCase().includes(letter);\r\n    const letterState = currAttempt.attempt > attemptVal && \r\n    (correct ? \"correct\" : almost ? \"almost\" : \"error\");\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      if (letter !== \"\" && !correct && !almost){\r\n        setDisabledLetters((prev) => [...prev, letter]);\r\n      }\r\n    }, [currAttempt.attempt]);\r\n\r\n  return (\r\n    <div className='letter' id={letterState}> {letter} </div>\r\n  );\r\n}\r\nexport default Letter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAClD,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAO,kBAAkB;AACzB,OAAOC,WAAW,MAAM,YAAY;AAAC;AAErC,SAASC,MAAM,OAA0B;EAAA;EAAA,IAAzB;IAACC,SAAS;IAAEC;EAAU,CAAC;EACnC,MAAM;IAACC;EAAY,CAAC,GAAGP,UAAU,CAACG,WAAW,CAAC;EAC9C,MAAM;IAAEK,KAAK;IAAEC,WAAW;IAAEC,WAAW;IAAEC,eAAe;IAAEC;EAAmB,CAAC,GAAGZ,UAAU,CAACE,WAAW,CAAC;EACxG,MAAMW,MAAM,GAAGL,KAAK,CAACF,UAAU,CAAC,CAACD,SAAS,CAAC;EAC3C,MAAMS,OAAO,GAAGL,WAAW,CAACM,WAAW,EAAE,CAACV,SAAS,CAAC,KAAKQ,MAAM;EAC/D,MAAMG,MAAM,GAAG,CAACF,OAAO,IAAID,MAAM,IAAI,EAAE,IAAIJ,WAAW,CAACM,WAAW,EAAE,CAACE,QAAQ,CAACJ,MAAM,CAAC;EACrF,MAAMK,WAAW,GAAGR,WAAW,CAACS,OAAO,GAAGb,UAAU,KACnDQ,OAAO,GAAG,SAAS,GAAGE,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;EAKnDf,SAAS,CAAC,MAAM;IACd,IAAIY,MAAM,KAAK,EAAE,IAAI,CAACC,OAAO,IAAI,CAACE,MAAM,EAAC;MACvCJ,kBAAkB,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEP,MAAM,CAAC,CAAC;IACjD;EACF,CAAC,EAAE,CAACH,WAAW,CAACS,OAAO,CAAC,CAAC;EAE3B,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAC,EAAE,EAAED,WAAY;IAAA,WAAC,GAAC,EAACL,MAAM,EAAC,GAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;AAE7D;AAAC,GArBQT,MAAM;AAAA,KAANA,MAAM;AAsBf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}