{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog stuff\\\\OGame\\\\frontend\\\\src\\\\components\\\\LeaderBoard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = () => {\n  _s();\n  const [mostWins, setMostWins] = useState([]);\n  const [bestWinPercent, setBestWinPercent] = useState([]);\n  useEffect(() => {\n    // Get the top 10 users with the most wins\n    axios.get(\"/userstats/top/wins\").then(res => {\n      setMostWins(res.data.success);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    // Get the top 10 users with the best win percentage\n    axios.get(\"/userstats/top/winpercent\").then(res => {\n      setBestWinPercent(res.data.success);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Most Wins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mostWins.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.wins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Best Win Percentage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Win Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: bestWinPercent.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [(user.wins / (user.wins + user.losses) * 100).toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"iViUt5Nr/IDvZs/hdtyS6WSFH+I=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["useState","useEffect","axios","Leaderboard","mostWins","setMostWins","bestWinPercent","setBestWinPercent","get","then","res","data","success","catch","err","console","log","map","user","index","username","wins","_id","losses","toFixed"],"sources":["E:/Prog stuff/OGame/frontend/src/components/LeaderBoard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Leaderboard = () => {\r\n  const [mostWins, setMostWins] = useState([]);\r\n  const [bestWinPercent, setBestWinPercent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Get the top 10 users with the most wins\r\n    axios\r\n      .get(\"/userstats/top/wins\")\r\n      .then((res) => {\r\n        setMostWins(res.data.success);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // Get the top 10 users with the best win percentage\r\n    axios\r\n      .get(\"/userstats/top/winpercent\")\r\n      .then((res) => {\r\n        setBestWinPercent(res.data.success);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Leaderboard</h2>\r\n\r\n      <h3>Most Wins</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>Wins</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {mostWins.map((user, index) => (\r\n            <tr key={user._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{user.username}</td>\r\n              <td>{user.wins}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3>Best Win Percentage</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>Win Percentage</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {bestWinPercent.map((user, index) => (\r\n            <tr key={user._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{user.username}</td>\r\n              <td>{((user.wins / (user.wins + user.losses)) * 100).toFixed(2)}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}