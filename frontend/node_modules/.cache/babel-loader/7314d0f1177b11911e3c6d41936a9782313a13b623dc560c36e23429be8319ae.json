{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog stuff\\\\OGame-wordle\\\\OGame-Wordle\\\\frontend\\\\src\\\\components\\\\WinLoss.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useChatContext } from 'stream-chat-react';\nimport './WinLoss.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WinLoss(_ref) {\n  _s();\n  var _client$user;\n  let {} = _ref;\n  const [wins, setWins] = useState(0); // state variable to store user's win count\n  const [losses, setLosses] = useState(0); // state variable to store user's loss count\n  const [elo, setElo] = useState(0);\n  const [error, setError] = useState(null); // state variable to store error message\n  const {\n    client\n  } = useChatContext(); // access Stream chat client instance\n  const userId = (_client$user = client.user) === null || _client$user === void 0 ? void 0 : _client$user.id; // get user ID from Stream chat client\n\n  // make API call to get user stats\n  useEffect(() => {\n    axios.get(`http://localhost:3001/get-UserStats?userId=${userId}`).then(res => {\n      setWins(res.data.success.wins); // update win count\n      setLosses(res.data.success.losses); // update loss count\n      setElo(res.data.success.elo);\n    }).catch(err => {\n      console.log(err);\n      setError('Error loading user stats'); // set error message if API call fails\n    });\n  }, [userId]); // only re-run the effect if userId changes\n\n  // display user's win/loss count\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"elo\",\n      children: [\"ELO: \", elo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"wl\",\n      children: \"Your W/L:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"win\",\n      children: [\"Wins: \", wins]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loose\",\n      children: [\"Losses: \", losses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(WinLoss, \"gjM4qi2B9qTsfr9F0ojUFdRgct4=\", false, function () {\n  return [useChatContext];\n});\n_c = WinLoss;\nexport default WinLoss;\nvar _c;\n$RefreshReg$(_c, \"WinLoss\");","map":{"version":3,"names":["React","useState","useEffect","axios","useChatContext","WinLoss","wins","setWins","losses","setLosses","elo","setElo","error","setError","client","userId","user","id","get","then","res","data","success","catch","err","console","log"],"sources":["E:/Prog stuff/OGame-wordle/OGame-Wordle/frontend/src/components/WinLoss.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useChatContext } from 'stream-chat-react';\r\nimport './WinLoss.css'\r\n\r\nfunction WinLoss({ }) {\r\n  const [wins, setWins] = useState(0); // state variable to store user's win count\r\n  const [losses, setLosses] = useState(0); // state variable to store user's loss count\r\n  const [elo, setElo] = useState(0);\r\n  const [error, setError] = useState(null); // state variable to store error message\r\n  const { client } = useChatContext(); // access Stream chat client instance\r\n  const userId = client.user?.id; // get user ID from Stream chat client\r\n\r\n  // make API call to get user stats\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/get-UserStats?userId=${userId}`)\r\n      .then(res => {\r\n        setWins(res.data.success.wins); // update win count\r\n        setLosses(res.data.success.losses); // update loss count\r\n        setElo(res.data.success.elo);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setError('Error loading user stats'); // set error message if API call fails\r\n      });\r\n  }, [userId]); // only re-run the effect if userId changes\r\n\r\n  // display user's win/loss count\r\n  return (\r\n    <div>\r\n      <h1 className='elo'>ELO: {elo}</h1>\r\n      <h1 className='wl'>Your W/L:</h1>\r\n      <p className='win'>Wins: {wins}</p>\r\n      <p className='loose'>Losses: {losses}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WinLoss;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAO,eAAe;AAAA;AAEtB,SAASC,OAAO,OAAM;EAAA;EAAA;EAAA,IAAL,CAAE,CAAC;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM;IAAEa;EAAO,CAAC,GAAGV,cAAc,EAAE,CAAC,CAAC;EACrC,MAAMW,MAAM,mBAAGD,MAAM,CAACE,IAAI,iDAAX,aAAaC,EAAE,CAAC,CAAC;;EAEhC;EACAf,SAAS,CAAC,MAAM;IACdC,KAAK,CAACe,GAAG,CAAE,8CAA6CH,MAAO,EAAC,CAAC,CAC9DI,IAAI,CAACC,GAAG,IAAI;MACXb,OAAO,CAACa,GAAG,CAACC,IAAI,CAACC,OAAO,CAAChB,IAAI,CAAC,CAAC,CAAC;MAChCG,SAAS,CAACW,GAAG,CAACC,IAAI,CAACC,OAAO,CAACd,MAAM,CAAC,CAAC,CAAC;MACpCG,MAAM,CAACS,GAAG,CAACC,IAAI,CAACC,OAAO,CAACZ,GAAG,CAAC;IAC9B,CAAC,CAAC,CACDa,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBX,QAAQ,CAAC,0BAA0B,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC;EACN,CAAC,EAAE,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd;EACA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,KAAK;MAAA,WAAC,OAAK,EAACL,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACnC;MAAI,SAAS,EAAC,IAAI;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eACjC;MAAG,SAAS,EAAC,KAAK;MAAA,WAAC,QAAM,EAACJ,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACnC;MAAG,SAAS,EAAC,OAAO;MAAA,WAAC,UAAQ,EAACE,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACrC;AAEV;AAAC,GA/BQH,OAAO;EAAA,QAKKD,cAAc;AAAA;AAAA,KAL1BC,OAAO;AAiChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}