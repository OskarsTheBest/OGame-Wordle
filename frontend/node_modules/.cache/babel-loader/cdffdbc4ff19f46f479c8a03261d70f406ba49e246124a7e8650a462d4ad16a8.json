{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog stuff\\\\OGame\\\\frontend\\\\src\\\\components\\\\WordInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './tailwind.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WordInput(_ref) {\n  _s();\n  let {\n    visible,\n    onClose\n  } = _ref;\n  // Using a ref to store the input value after form submission\n  const wordleInputVal = useRef(\"\");\n  // Using state to keep track of the input value in real time\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Updating the ref value with the current input value\n    wordleInputVal.current = inputValue;\n    onClose();\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      onClose();\n    }\n  };\n\n  // If the modal is not visible, return null\n  if (!visible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[600px] flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-2 rounded\",\n        children: \"Write an Wordle Word for your Enemy:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"send data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Here: \", inputValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(WordInput, \"v0BmrT2JYb/BN3XTAuuadiuO6W4=\");\n_c = WordInput;\nexport default WordInput;\nvar _c;\n$RefreshReg$(_c, \"WordInput\");","map":{"version":3,"names":["React","useState","useRef","WordInput","visible","onClose","wordleInputVal","inputValue","setInputValue","handleSubmit","e","preventDefault","current","handleKeyDown","event","key","target","value"],"sources":["E:/Prog stuff/OGame/frontend/src/components/WordInput.js"],"sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport './tailwind.css'\r\n\r\nfunction WordInput({ visible, onClose }) {\r\n  // Using a ref to store the input value after form submission\r\n  const wordleInputVal = useRef(\"\");\r\n  // Using state to keep track of the input value in real time\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Updating the ref value with the current input value\r\n    wordleInputVal.current = inputValue;\r\n    onClose();\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      onClose()\r\n    }\r\n  };\r\n\r\n  // If the modal is not visible, return null\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div className='fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex justify-center items-center '>\r\n      <div className='w-[600px] flex flex-col'>\r\n        {/* Close button */}\r\n        {/* <button className='text-white text-xl place-self-end' onClick={() => onClose()}>X</button> */}\r\n        {/* Input label */}\r\n        <div className='bg-white p-2 rounded'>Write an Wordle Word for your Enemy:</div>\r\n        {/* Input form */}\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" required value={inputValue} onChange={(e) => setInputValue(e.target.value)} onKeyDown={handleKeyDown} />\r\n          <button>send data</button>\r\n        </form>\r\n        {/* Displaying the input value */}\r\n        <p>Here: {inputValue}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WordInput\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,gBAAgB;AAAA;AAEvB,SAASC,SAAS,OAAuB;EAAA;EAAA,IAAtB;IAAEC,OAAO;IAAEC;EAAQ,CAAC;EACrC;EACA,MAAMC,cAAc,GAAGJ,MAAM,CAAC,EAAE,CAAC;EACjC;EACA,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB;IACAL,cAAc,CAACM,OAAO,GAAGL,UAAU;IACnCF,OAAO,EAAE;EACX,CAAC;EAED,MAAMQ,aAAa,GAAIC,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzBV,OAAO,EAAE;IACX;EACF,CAAC;;EAED;EACA,IAAI,CAACD,OAAO,EAAE,OAAO,IAAI;EAEzB,oBACE;IAAK,SAAS,EAAC,yFAAyF;IAAA,uBACtG;MAAK,SAAS,EAAC,yBAAyB;MAAA,wBAItC;QAAK,SAAS,EAAC,sBAAsB;QAAA,UAAC;MAAoC;QAAA;QAAA;QAAA;MAAA,QAAM,eAEhF;QAAM,QAAQ,EAAEK,YAAa;QAAA,wBAC3B;UAAO,IAAI,EAAC,MAAM;UAAC,QAAQ;UAAC,KAAK,EAAEF,UAAW;UAAC,QAAQ,EAAGG,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACM,MAAM,CAACC,KAAK,CAAE;UAAC,SAAS,EAAEJ;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3H;UAAA,UAAQ;QAAS;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACrB,eAEP;QAAA,WAAG,QAAM,EAACN,UAAU;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA;EACrB;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAvCQJ,SAAS;AAAA,KAATA,SAAS;AAyClB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}