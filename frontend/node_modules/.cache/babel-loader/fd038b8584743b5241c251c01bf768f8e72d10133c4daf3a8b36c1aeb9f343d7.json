{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog stuff\\\\OGame\\\\frontend\\\\src\\\\components\\\\JoinGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useChatContext, Channel } from 'stream-chat-react';\nimport CustomInput from './CustomInput';\nimport Game from './Game';\nimport WinLoss from './WinLoss';\nimport './Joingame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JoinGame(_ref) {\n  _s();\n  let {\n    wordSet,\n    selectedWord\n  } = _ref;\n  const [rivalUsername, setRivalUsername] = useState(\"\");\n  const {\n    client\n  } = useChatContext();\n  const [channel, setchannel] = useState(null);\n  const createChannel = async () => {\n    const response = await client.queryUsers({\n      name: {\n        $eq: rivalUsername\n      }\n    });\n    if (response.users.length === 0) {\n      alert(\"User not found\");\n      return;\n    }\n    const newChannel = await client.channel(\"messaging\", {\n      members: [client.userID, response.users[0].id],\n      selectedWord: selectedWord\n    });\n    await newChannel.watch();\n    setchannel(newChannel);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: channel ? /*#__PURE__*/_jsxDEV(Channel, {\n      channel: channel,\n      Input: CustomInput,\n      children: channel && /*#__PURE__*/_jsxDEV(Game, {\n        channel: channel,\n        wordSet: wordSet,\n        selectedWord: selectedWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(WinLoss, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"title\",\n        children: \"Create Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: \"label\",\n        children: \"Username of Rival\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        className: \"input\",\n        placeholder: \"Enter your rival's username\",\n        onChange: event => {\n          setRivalUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: createChannel,\n        children: \"Join Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(JoinGame, \"QUJwEyMVVs9+uVfq5m2YTtDBxjM=\", false, function () {\n  return [useChatContext];\n});\n_c = JoinGame;\nexport default JoinGame;\nvar _c;\n$RefreshReg$(_c, \"JoinGame\");","map":{"version":3,"names":["React","useState","useChatContext","Channel","CustomInput","Game","WinLoss","JoinGame","wordSet","selectedWord","rivalUsername","setRivalUsername","client","channel","setchannel","createChannel","response","queryUsers","name","$eq","users","length","alert","newChannel","members","userID","id","watch","event","target","value"],"sources":["E:/Prog stuff/OGame/frontend/src/components/JoinGame.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {useChatContext, Channel} from 'stream-chat-react'\r\nimport CustomInput from './CustomInput';\r\nimport Game from './Game';\r\nimport WinLoss from './WinLoss'\r\nimport './Joingame.css';\r\n\r\n\r\nfunction JoinGame({ wordSet, selectedWord }) {\r\n  const [rivalUsername, setRivalUsername] = useState(\"\");\r\n  const { client } = useChatContext();\r\n  const [channel, setchannel] = useState(null)\r\n\r\n\r\n  \r\n\r\n\r\n  const createChannel = async () => {\r\n    const response = await client.queryUsers({ name: { $eq: rivalUsername}});\r\n\r\n    if (response.users.length === 0) {\r\n      alert(\"User not found\")\r\n      return\r\n    }\r\n\r\n    const newChannel = await client.channel(\"messaging\", {\r\n      members: [client.userID, response.users[0].id],\r\n      selectedWord: selectedWord,\r\n    });\r\n\r\n    await newChannel.watch();\r\n    setchannel(newChannel);\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n    {channel ? (\r\n      <Channel channel={channel} Input={CustomInput}>\r\n      {channel && <Game channel={channel} wordSet={wordSet} selectedWord={selectedWord}/>}\r\n\r\n      </Channel>\r\n    )  : (\r\n    \r\n\r\n      <div className=\"container\">\r\n      <WinLoss />\r\n    \r\n      <h4 className=\"title\">Create Game</h4>\r\n    \r\n\r\n        <label htmlFor=\"username\" className=\"label\">Username of Rival</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"username\" \r\n          className=\"input\" \r\n          placeholder=\"Enter your rival's username\"\r\n          onChange={(event) => {\r\n            setRivalUsername(event.target.value);\r\n          }} \r\n        />\r\n    \r\n        <button \r\n          className=\"button\" \r\n          onClick={createChannel}\r\n        >\r\n          Join Game\r\n        </button>\r\n\r\n    </div>\r\n  )}\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default JoinGame\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,cAAc,EAAEC,OAAO,QAAO,mBAAmB;AACzD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,gBAAgB;AAAC;AAAA;AAGxB,SAASC,QAAQ,OAA4B;EAAA;EAAA,IAA3B;IAAEC,OAAO;IAAEC;EAAa,CAAC;EACzC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAEW;EAAO,CAAC,GAAGV,cAAc,EAAE;EACnC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAM5C,MAAMc,aAAa,GAAG,YAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,UAAU,CAAC;MAAEC,IAAI,EAAE;QAAEC,GAAG,EAAET;MAAa;IAAC,CAAC,CAAC;IAExE,IAAIM,QAAQ,CAACI,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MAC/BC,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACF;IAEA,MAAMC,UAAU,GAAG,MAAMX,MAAM,CAACC,OAAO,CAAC,WAAW,EAAE;MACnDW,OAAO,EAAE,CAACZ,MAAM,CAACa,MAAM,EAAET,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAACM,EAAE,CAAC;MAC9CjB,YAAY,EAAEA;IAChB,CAAC,CAAC;IAEF,MAAMc,UAAU,CAACI,KAAK,EAAE;IACxBb,UAAU,CAACS,UAAU,CAAC;EAExB,CAAC;EAED,oBACE;IAAA,UAECV,OAAO,gBACN,QAAC,OAAO;MAAC,OAAO,EAAEA,OAAQ;MAAC,KAAK,EAAET,WAAY;MAAA,UAC7CS,OAAO,iBAAI,QAAC,IAAI;QAAC,OAAO,EAAEA,OAAQ;QAAC,OAAO,EAAEL,OAAQ;QAAC,YAAY,EAAEC;MAAa;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAEzE,gBAIV;MAAK,SAAS,EAAC,WAAW;MAAA,wBAC1B,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eAEX;QAAI,SAAS,EAAC,OAAO;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK,eAGpC;QAAO,OAAO,EAAC,UAAU;QAAC,SAAS,EAAC,OAAO;QAAA,UAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrE;QACE,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,UAAU;QACb,SAAS,EAAC,OAAO;QACjB,WAAW,EAAC,6BAA6B;QACzC,QAAQ,EAAGmB,KAAK,IAAK;UACnBjB,gBAAgB,CAACiB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QACtC;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eAEF;QACE,SAAS,EAAC,QAAQ;QAClB,OAAO,EAAEf,aAAc;QAAA,UACxB;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAGd,iBAEE;AAEL;AAAC,GAnEQR,QAAQ;EAAA,QAEIL,cAAc;AAAA;AAAA,KAF1BK,QAAQ;AAqEjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}